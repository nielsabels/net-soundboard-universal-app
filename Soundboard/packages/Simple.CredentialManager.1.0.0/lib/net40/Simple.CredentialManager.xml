<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Simple.CredentialManager</name>
    </assembly>
    <members>
        <member name="T:Simple.CredentialManager.Credential">
            <summary>
                Class Credential, wrapper for native CREDENTIAL structure.
                See CREDENTIAL structure
                <see href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa374788(v=vs.85).aspx">documentation.</see>
                See Credential Manager
                <see href="http://windows.microsoft.com/en-us/windows7/what-is-credential-manager">documentation.</see>
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.LockObject">
            <summary>
                The lock object
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.UnmanagedCodePermission">
            <summary>
                The unmanaged code permission
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.description">
            <summary>
                The credential description
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.disposed">
            <summary>
                The disposed flag
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.lastWriteTime">
            <summary>
                The last write time
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.password">
            <summary>
                The password
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.persistenceType">
            <summary>
                The persistence type
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.target">
            <summary>
                The string that contains the name of the credential
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.type">
            <summary>
                The credential type
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.Credential.username">
            <summary>
                The username
            </summary>
        </member>
        <member name="M:Simple.CredentialManager.Credential.#cctor">
            <summary>
                Initializes UnmanagedCodePermission for the <see cref="T:Simple.CredentialManager.Credential"/> class.
            </summary>
        </member>
        <member name="M:Simple.CredentialManager.Credential.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Simple.CredentialManager.Credential"/> class.
            </summary>
        </member>
        <member name="M:Simple.CredentialManager.Credential.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Simple.CredentialManager.Credential"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="M:Simple.CredentialManager.Credential.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Simple.CredentialManager.Credential"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Simple.CredentialManager.Credential.#ctor(System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Simple.CredentialManager.Credential"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="target">The string that contains the name of the credential.</param>
        </member>
        <member name="M:Simple.CredentialManager.Credential.#ctor(System.String,System.String,System.String,Simple.CredentialManager.CredentialType)">
            <summary>
                Initializes a new instance of the <see cref="T:Simple.CredentialManager.Credential"/> class.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="target">The string that contains the name of the credential.</param>
            <param name="type">The credential type.</param>
        </member>
        <member name="M:Simple.CredentialManager.Credential.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Simple.CredentialManager.Credential.Finalize">
            <summary>
                Finalizes an instance of the <see cref="T:Simple.CredentialManager.Credential"/> class.
            </summary>
        </member>
        <member name="M:Simple.CredentialManager.Credential.Dispose(System.Boolean)">
            <summary>
                Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing">
                <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only
                unmanaged resources.
            </param>
        </member>
        <member name="M:Simple.CredentialManager.Credential.CheckNotDisposed">
            <summary>
                Checks the not disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">Credential object is already disposed.</exception>
        </member>
        <member name="M:Simple.CredentialManager.Credential.Save">
            <summary>
                Saves this instance.
            </summary>
            <returns><c>true</c> if credential is saved properly, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">password;The password has exceeded 512 bytes.</exception>
        </member>
        <member name="M:Simple.CredentialManager.Credential.Delete">
            <summary>
                Deletes this instance.
            </summary>
            <returns><c>true</c> if credential was deleted properly, <c>false</c> otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Target must be specified to delete a credential.</exception>
        </member>
        <member name="M:Simple.CredentialManager.Credential.Load">
            <summary>
                Loads this instance.
            </summary>
            <returns><c>true</c> if credential is load properly, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Simple.CredentialManager.Credential.Exists">
            <summary>
                Existses this instance.
            </summary>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">Target must be specified to check existance of a credential.</exception>
        </member>
        <member name="M:Simple.CredentialManager.Credential.LoadInternal(Simple.CredentialManager.NativeMethods.CREDENTIAL)">
            <summary>
                Loads the internal.
            </summary>
            <param name="credential">The credential.</param>
        </member>
        <member name="P:Simple.CredentialManager.Credential.Username">
            <summary>
                Gets or sets the username.
            </summary>
            <value>The user name of the account used to connect to TargetName.</value>
        </member>
        <member name="P:Simple.CredentialManager.Credential.Password">
            <summary>
                Gets or sets the password.
            </summary>
            <value>The decoded secure string password.</value>
        </member>
        <member name="P:Simple.CredentialManager.Credential.SecurePassword">
            <summary>
                Gets or sets the secure password.
            </summary>
            <value>The secure password of the account used to connect to TargetName.</value>
        </member>
        <member name="P:Simple.CredentialManager.Credential.Target">
            <summary>
                Gets or sets the target.
            </summary>
            <value>
                The name of the credential. The TargetName and Type members uniquely identify the credential. This member cannot
                be changed after the credential is created. Instead, the credential with the old name should be deleted and the
                credential with the new name created.
            </value>
        </member>
        <member name="P:Simple.CredentialManager.Credential.Description">
            <summary>
                Gets or sets the description.
            </summary>
            <value>
                The string comment from the user that describes this credential. This member cannot be longer than
                CRED_MAX_STRING_LENGTH (256) characters.
            </value>
        </member>
        <member name="P:Simple.CredentialManager.Credential.LastWriteTime">
            <summary>
                Gets the last write time.
            </summary>
            <value>The last write time.</value>
        </member>
        <member name="P:Simple.CredentialManager.Credential.LastWriteTimeUtc">
            <summary>
                Gets the last write time UTC.
            </summary>
            <value>The last write time UTC.</value>
        </member>
        <member name="P:Simple.CredentialManager.Credential.Type">
            <summary>
                Gets or sets the type.
            </summary>
            <value>The type of the credential. This member cannot be changed after the credential is created.</value>
        </member>
        <member name="P:Simple.CredentialManager.Credential.PersistenceType">
            <summary>
                Gets or sets the type of the persistence.
            </summary>
            <value>Defines the persistence of this credential. This member can be read and written.</value>
        </member>
        <member name="T:Simple.CredentialManager.PersistenceType">
            <summary>
                Enum PersistenceType
                Defines the persistence of this credential. This member can be read and written.
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.PersistenceType.Session">
            <summary>
                The session persistence type
                The credential persists for the life of the logon session.
                It will not be visible to other logon sessions of this same user.
                It will not exist after this user logs off and back on.
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.PersistenceType.LocalComputer">
            <summary>
                The local computer persistence type
                The credential persists for all subsequent logon sessions on this same computer.
                It is visible to other logon sessions of this same user on this same computer
                and not visible to logon sessions for this user on other computers.
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.PersistenceType.Enterprise">
            <summary>
                The enterprise persistence type
                The credential persists for all subsequent logon sessions on this same computer. It is visible to other logon
                sessions of this same user on this same computer and to logon sessions for this user on other computers.
                this option can be implemented as locally persisted credential if the administrator or user configures the user
                account to not have roam-able state. For instance, if the user has no roaming profile, the credential will only
                persist locally.
            </summary>
        </member>
        <member name="T:Simple.CredentialManager.CredentialType">
            <summary>
                Enum CredentialType
            
                The type of the credential. This member cannot be changed after the credential is created.
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.CredentialType.None">
            <summary>
                The lack of credential type
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.CredentialType.Generic">
            <summary>
                Generic credential type
            
                The credential is a generic credential. The credential will not be used by any particular authentication package. 
                The credential will be stored securely but has no other significant characteristics.
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.CredentialType.DomainPassword">
            <summary>
                Domain password credential type
            
                The credential is a password credential and is specific to Microsoft's authentication packages. 
                The NTLM, Kerberos, and Negotiate authentication packages will automatically use this credential when connecting to the named target.
            </summary>
        </member>
        <member name="F:Simple.CredentialManager.CredentialType.DomainCertificate">
            <summary>
                Domain certificate credential type
            
                The credential is a certificate credential and is specific to Microsoft's authentication packages. 
                The Kerberos, Negotiate, and Schannel authentication packages automatically use this credential when connecting to the named target.
            </summary>
        </member>
        <member name="T:Simple.CredentialManager.NativeMethods">
            <summary>
                Wrapper for advapi32.dll library.
                Advanced Services
                Provide access to functionality additional to the kernel.
                Included are things like the Windows registry, shutdown/restart the system (or abort),
                start/stop/create a Windows service, manage user accounts.
                These functions reside in advapi32.dll on 32-bit Windows.
            </summary>
        </member>
        <member name="M:Simple.CredentialManager.NativeMethods.CredRead(System.String,Simple.CredentialManager.CredentialType,System.Int32,System.IntPtr@)">
            <summary>
                The CredRead function reads a credential from the user's credential set.
                The credential set used is the one associated with the logon session of the current token.
                The token must not have the user's SID disabled.
            </summary>
            <remarks>
                If the value of the Type member of the CREDENTIAL structure specified by the Credential parameter is
                CRED_TYPE_DOMAIN_EXTENDED, a namespace must be specified in the target name. This function can return only one
                credential of the specified type.
            </remarks>
            <param name="target">Pointer to a null-terminated string that contains the name of the credential to read.</param>
            <param name="type">Type of the credential to read. Type must be one of the CRED_TYPE_* defined types.</param>
            <param name="reservedFlag">Currently reserved and must be zero.</param>
            <param name="credentialPtr">
                Pointer to a single allocated block buffer to return the credential.
                Any pointers contained within the buffer are pointers to locations within this single allocated block.
                The single returned buffer must be freed by calling CredFree.
            </param>
            <returns>The function returns TRUE on success and FALSE on failure.</returns>
        </member>
        <member name="M:Simple.CredentialManager.NativeMethods.CredWrite(Simple.CredentialManager.NativeMethods.CREDENTIAL@,System.UInt32)">
            <summary>
                The CredWrite function creates a new credential or modifies an existing credential in the user's credential set.
                The new credential is associated with the logon session of the current token.
                The token must not have the user's security identifier (SID) disabled.
            </summary>
            <remarks>
                This function creates a credential if a credential with the specified TargetName and Type does not exist. If a
                credential with the specified TargetName and Type exists, the new specified credential replaces the existing one.
                When this function writes a CRED_TYPE_CERTIFICATE credential, the Credential->CredentialBlob member specifies the
                PIN protecting the private key of the certificate specified by the Credential->UserName member. The credential
                manager does not maintain the PIN. Rather, the PIN is passed to the cryptographic service provider (CSP) indicated
                on the certificate for later use by the CSP and the authentication packages. The CSP defines the lifetime of the
                PIN. Most CSPs flush the PIN when the smart card removal from the smart card reader.
                If the value of the Type member of the CREDENTIAL structure specified by the Credential parameter is
                CRED_TYPE_DOMAIN_EXTENDED, a namespace must be specified in the target name. This function does not support writing
                to target names that contain wildcards.
            </remarks>
            <param name="userCredential">A pointer to the CREDENTIAL structure to be written.</param>
            <param name="flags">Flags that control the function's operation. The following flag is defined.</param>
            <returns>If the function succeeds, the function returns TRUE, if the function fails, it returns FALSE. </returns>
        </member>
        <member name="M:Simple.CredentialManager.NativeMethods.CredFree(System.IntPtr)">
            <summary>
                The CredFree function frees a buffer returned by any of the credentials management functions.
            </summary>
            <param name="cred">Pointer to the buffer to be freed.</param>
        </member>
        <member name="M:Simple.CredentialManager.NativeMethods.CredDelete(System.Text.StringBuilder,Simple.CredentialManager.CredentialType,System.Int32)">
            <summary>
                The CredDelete function deletes a credential from the user's credential set.
                The credential set used is the one associated with the logon session of the current token.
                The token must not have the user's SID disabled.
            </summary>
            <param name="target">Pointer to a null-terminated string that contains the name of the credential to delete.</param>
            <param name="type">
                Type of the credential to delete. Must be one of the CRED_TYPE_* defined types.
                For a list of the defined types, see the Type member of the CREDENTIAL structure.
                If the value of this parameter is CRED_TYPE_DOMAIN_EXTENDED,
                this function can delete a credential that specifies a user name when there are multiple credentials for the same
                target. The value of the TargetName parameter must specify the user name as Target|UserName.
            </param>
            <param name="flags">Reserved and must be zero.</param>
            <returns>The function returns TRUE on success and FALSE on failure.</returns>
        </member>
        <member name="T:Simple.CredentialManager.NativeMethods.CREDENTIAL">
            <summary>
            The CREDENTIAL structure contains an individual credential.
            
            See CREDENTIAL structure <see href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa374788(v=vs.85).aspx">documentation.</see>
            </summary>
        </member>
    </members>
</doc>
